/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
#include <stdlib.h>

int squares (int num);
void bubblesort (int* nums, int size);
void ft_swap (int* a, int* b);

int* sortedSquares(int* nums, int numsSize, int* returnSize) {
    int* result;
    result = (int *)malloc(sizeof(int *) * numsSize + 1);
    for(int i = 0; i < numsSize; i++)
        result[i] = squares(nums[i]);
    bubblesort(result, numsSize);
    *returnSize = numsSize;
    return result;
}

int squares (int num) {
    return num * num;
}

void bubblesort (int* nums, int size) {
    int i;
    int j;

    i = 0;
    j = 0;

    while(i < size){
        j = 0;
        while(j < size - i - 1) {
            if(nums[j] > nums[j + 1])
                ft_swap(&nums[j], &nums[j + 1]);
                j++;
        }
        i++;
    }
}

void ft_swap (int* a, int* b) {
    int tmp;

    tmp = *a;
    *a = *b;
    *b = tmp;
}
