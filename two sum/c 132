/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* createTargetArray(int* nums, int numsSize, int* index, int indexSize, int* returnSize) {
    int i = 0;
    int *ans = (int *)malloc(sizeof(int)*numsSize);
    /*Initial the value with -1*/
    memset(ans, -1, sizeof(int) * numsSize);

    for(i=0; i<numsSize; i++)
    {
        /*if index[i] value is -1 then it means this index accessing first time*/
        if(ans[index[i]] == -1) {
            ans[index[i]] = nums[i];
        }
        else /*This index[i] was already been used*/
        {
            int j = numsSize;
            /* Move the element to right ( ->) from last index */
            while(j > index[i]) {
                if((j-2)<0) break;
                ans[j - 1] = ans[j - 2];
                j--;
            }
            ans[index[i]] = nums[i];
        }
    }
    *returnSize = numsSize;
    return ans;

}
